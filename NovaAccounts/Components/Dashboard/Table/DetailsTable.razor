@page "/api-data-example"
@using System.Net.Http.Json
@using NovaAccounts.Components.DataFields
@using NovaAccounts.Components.Shared
@inject HttpClient Http

<div class="row mt-4">
    <div class="col-md-6">
        <h4>API Data - Employee Details (Small Font)</h4>
        @if (isLoading)
        {
            <p>Loading...</p>
        }
        else if (employeeData != null)
        {
            <DataDisplayTable TItem="Employee" 
                             Data="@employeeData" 
                             PropertyLabels="@employeeLabels"
                             LabelFontSize="12px"
                             ValueFontSize="14px" />
        }
        else
        {
            <p>No data available</p>
        }
    </div>

    <div class="col-md-6">
        <h4>Manual Data (Large Font)</h4>
        <DataDisplayTable TItem="object" Items="@payrollItems" 
                               LabelFontSize="18px"
                               ValueFontSize="20px" />
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <h4>API Data - Payroll Summary (Medium Font)</h4>
        @if (isLoadingPayroll)
        {
            <p>Loading payroll data...</p>
        }
        else if (payrollSummary != null)
        {
            <DataDisplayTable TItem="PayrollSummary" 
                             Data="@payrollSummary"
                             LabelFontSize="16px"
                             ValueFontSize="18px" />
        }
    </div>

    <div class="col-md-6">
        <h4>Manual Items from API Response</h4>
        <DataDisplayTable TItem="object" Items="@apiBasedItems" 
                               LabelFontSize="14px"
                               ValueFontSize="16px" />
    </div>
</div>

@code {
    private bool isLoading = true;
    private bool isLoadingPayroll = true;
    private Employee? employeeData;
    private PayrollSummary? payrollSummary;
    private List<DataDisplayItem> apiBasedItems = new();

    // Manual data with different font size
    private List<DataDisplayItem> payrollItems = new()
    {
        new DataDisplayItem { Label = "STAFF NUMBER", Value = "EMP001" },
        new DataDisplayItem { Label = "STAFF NAME", Value = "John Doe" },
        new DataDisplayItem { Label = "BASIC", Value = "5,000.00" },
        new DataDisplayItem { Label = "SSNIT", Value = "650.00" }
    };

    private Dictionary<string, string> employeeLabels = new()
    {
        { "Id", "EMPLOYEE ID" },
        { "FirstName", "FIRST NAME" },
        { "LastName", "LAST NAME" },
        { "Department", "DEPARTMENT" },
        { "Salary", "MONTHLY SALARY" },
        { "HireDate", "DATE HIRED" },
        { "Email", "EMAIL ADDRESS" }
    };

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployeeData();
        await LoadPayrollData();
        await LoadApiBasedItems();
    }

    private async Task LoadEmployeeData()
    {
        try
        {
            // Example API call - replace with your actual endpoint
            // employeeData = await Http.GetFromJsonAsync<Employee>("api/employees/123");
            
            // Simulated API response
            await Task.Delay(1000); // Simulate API delay
            employeeData = new Employee
            {
                Id = "EMP123",
                FirstName = "Jane",
                LastName = "Smith",
                Department = "Engineering",
                Salary = 8500.00m,
                HireDate = DateTime.Now.AddYears(-2),
                Email = "jane.smith@company.com"
            };
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading employee data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task LoadPayrollData()
    {
        try
        {
            // Example API call
            // payrollSummary = await Http.GetFromJsonAsync<PayrollSummary>("api/payroll/current");
            
            // Simulated API response
            await Task.Delay(800);
            payrollSummary = new PayrollSummary
            {
                GrossPay = 8500.00m,
                TaxDeduction = 1275.00m,
                SSNITContribution = 1105.00m,
                NetPay = 6120.00m,
                PayPeriod = "March 2024"
            };
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading payroll data: {ex.Message}");
        }
        finally
        {
            isLoadingPayroll = false;
        }
    }

    private async Task LoadApiBasedItems()
    {
        try
        {
            // You can also build DataDisplayItems from API responses
            // var apiResponse = await Http.GetFromJsonAsync<ApiResponse>("api/summary");
            
            // Simulate building items from API response
            await Task.Delay(500);
            apiBasedItems = new List<DataDisplayItem>
            {
                new DataDisplayItem { Label = "TOTAL EMPLOYEES", Value = "45" },
                new DataDisplayItem { Label = "ACTIVE CONTRACTS", Value = "42" },
                new DataDisplayItem { Label = "PENDING APPROVALS", Value = "3" },
                new DataDisplayItem { Label = "MONTHLY BUDGET", Value = "â‚µ125,000.00" }
            };
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading summary data: {ex.Message}");
        }
    }
    
    
    // Data models for API responses
    public class Employee
    {
        public string Id { get; set; } = string.Empty;
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public string Department { get; set; } = string.Empty;
        public decimal Salary { get; set; }
        public DateTime HireDate { get; set; }
        public string Email { get; set; } = string.Empty;
    }

    public class PayrollSummary
    {
        public decimal GrossPay { get; set; }
        public decimal TaxDeduction { get; set; }
        public decimal SSNITContribution { get; set; }
        public decimal NetPay { get; set; }
        public string PayPeriod { get; set; } = string.Empty;
    }
}













@* *@
@* @page "/example-usage" *@
@* @using NovaAccounts.Components.Dashboard.Modals *@
@* @using NovaAccounts.Components.DataFields *@
@* @using NovaAccounts.Components.Shared *@
@* *@
@* <div class="row mt-4"> *@
@*     <div class="col-md-6"> *@
@*         <h4>Example 1b: Manual Data Items (Generic)</h4> *@
@*         <DataDisplayTable TItem="object" Items="@payrollItems" /> *@
@*     </div> *@
@*     *@
@* </div> *@
@* *@
@* *@
@* *@
@* @code { *@
@*     *@
@*     private List<DataDisplayItem> payrollItems = new() *@
@*     { *@
@*         new DataDisplayItem { Label = "STAFF NUMBER", Value = "EMP001" }, *@
@*         new DataDisplayItem { Label = "STAFF NAME", Value = "John Doe" }, *@
@*         new DataDisplayItem { Label = "BASIC", Value = "5,000.00" }, *@
@*         new DataDisplayItem { Label = "SSNIT", Value = "650.00" }, *@
@*         new DataDisplayItem { Label = "TAXABLE PAY", Value = "4,350.00" }, *@
@*         new DataDisplayItem { Label = "TAX", Value = "435.00" } *@
@*       *@
@*     }; *@
@* } *@









@* *@
@* <table class="table"> *@
@*     <tbody> *@
@*         <tr> *@
@*             <td class="bg-blue-chambray font-white">STAFF NUMBER</td> *@
@*             <td class="lead">StaffNum</td> *@
@*         </tr> *@
@*         <tr> *@
@*             <td class="bg-blue-chambray font-white">STAFF NAME</td> *@
@*             <td class="lead">ClientName</td> *@
@*         </tr> *@
@*         <tr> *@
@*             <td class="bg-blue-chambray font-white">BASIC</td> *@
@*             <td class="lead">BasicAmount.ToString("N")</td> *@
@*         </tr> *@
@*         <tr> *@
@*             <td class="bg-blue-chambray font-white">SSNIT</td> *@
@*             <td class="lead">EmployeeSSNIT.ToString("N")</td> *@
@*         </tr> *@
@*         *@
@*         *@
@*      *@
@*         <tr> *@
@*             <td class="bg-blue-chambray font-white">TAXABLE PAY</td> *@
@*             <td class="lead">TaxableAmount.ToString("N")</td> *@
@*         </tr> *@
@*         <tr> *@
@*             <td class="bg-blue-chambray font-white">TAX</td> *@
@*             <td class="lead">TaxAmount.ToString("N")</td> *@
@*         </tr> *@
@*         <tr> *@
@*             <td class="bg-blue-chambray font-white">DEDUCTIONS</td> *@
@*             <td class="lead">LoanDeduction.ToString("N")</td> *@
@*         </tr> *@
@*         *@
@*     </tbody> *@
@* </table> *@
@* *@
