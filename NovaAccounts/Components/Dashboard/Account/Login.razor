@page "/login"
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Headers
@using System.Security.Claims
@using NovaAccounts.Components.Layout
@using NovaAccounts.Services.AuthService
@inject IHttpClientFactory HttpClientFactory
@inject TokenProvider TokenProvider
@inject AuthenticationService AuthService
@layout AccountLayout
@inject NavigationManager Navigation
@using System.Security.Claims
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Components.Authorization

<body id="kt_body" class="app-blank bgi-size-cover bgi-attachment-fixed bgi-position-center">
    <!--begin::Theme mode setup on page load-->
    <script>var defaultThemeMode = "light"; var themeMode; if ( document.documentElement ) { if ( document.documentElement.hasAttribute("data-bs-theme-mode")) { themeMode = document.documentElement.getAttribute("data-bs-theme-mode"); } else { if ( localStorage.getItem("data-bs-theme") !== null ) { themeMode = localStorage.getItem("data-bs-theme"); } else { themeMode = defaultThemeMode; } } if (themeMode === "system") { themeMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"; } document.documentElement.setAttribute("data-bs-theme", themeMode); }</script>
    <!--end::Theme mode setup on page load-->
    <!--begin::Root-->
    <div class="d-flex flex-column flex-root" id="kt_app_root">
        <!--begin::Page bg image-->
        <style> [data-bs-theme="dark"] </style>
        <!--end::Page bg image-->
        <!--begin::Authentication - Sign-in -->
        <div class="d-flex flex-column flex-lg-row flex-column-fluid">
            <!--begin::Aside-->
            <div class="d-flex flex-lg-row-fluid">
                <!--begin::Content-->
                <div class="d-flex flex-column align-items-center justify-content-between pb-0 pb-lg-10 p-10 w-100">
                    <!--begin::Image-->
                    <div class="w-100 h-125px d-flex flex-center" style="background-color: #151B54">
                        <img class="theme-light-show" src="/assets/pages/img/login/logo.png" style="width: 80%" alt="" />
                    </div>

                    <img class="theme-light-show mx-auto mw-100 mb-10 mb-lg-20" src="/assets/pages/img/login/bg0.jpg" width="100% !important" alt="" />
                
                    <!--end::Image-->
                    <!--begin::Title-->
                    <h1 class="text-gray-800 fs-2qx fw-bold text-center mb-7">Fast, Efficient and Productive</h1>
                    <!--end::Title-->
                    
                    <br/>
                    <p>Copyright &copy; F&F ICT SOLUTIONS LTD 2017</p>
                    <!--end::Text-->
                </div>
                <!--end::Content-->
            </div>
            <!--begin::Aside-->
            <!--begin::Body-->
            <div class="d-flex flex-column-fluid flex-lg-row-auto justify-content-center justify-content-lg-end p-12">
                <!--begin::Wrapper-->
                <div class="bg-body d-flex flex-column flex-center rounded-4 w-md-600px p-10">
                    <!--begin::Content-->
                    <div class="d-flex flex-center flex-column align-items-stretch h-lg-100 w-md-400px">
                        <!--begin::Wrapper-->
                        <div class="d-flex flex-center flex-column flex-column-fluid pb-15 pb-lg-20">
                            <!--begin::Form-->
                            <EditForm Model="loginModel" OnValidSubmit="SignIn" FormName="LoginForm" class="form w-100" Enhance>
                                <DataAnnotationsValidator />
                                
                                <!--begin::Heading-->
                                <div class="text-center mb-11">
                                    <!--begin::Title-->
                                    <h1 class="text-gray-900 fw-bolder mb-3">Sign In</h1>
                                    <!--end::Title-->
                                    <!--begin::Subtitle-->
                                    <div class="text-gray-500 fw-semibold fs-6">Your Social Campaigns</div>
                                    <!--end::Subtitle=-->
                                </div>
                                <!--begin::Heading-->
                                
                                @if (!string.IsNullOrEmpty(errorMessage))
                                {
                                    <div class="alert alert-danger mb-8">
                                        @errorMessage
                                    </div>
                                }
                                
                                <!--begin::Login options-->
                                <div class="row g-3 mb-9">
                                    <!--begin::Col-->
                                    <div class="col-md-6">
                                        <!--begin::Google link=-->
                                        <button type="button" class="btn btn-flex btn-outline btn-text-gray-700 btn-active-color-primary bg-state-light flex-center text-nowrap w-100">
                                        <img alt="Logo" src="/account/assets/media/svg/brand-logos/google-icon.svg" class="h-15px me-3" />Sign in with Google</button>
                                        <!--end::Google link=-->
                                    </div>
                                    <!--end::Col-->
                                    <!--begin::Col-->
                                    <div class="col-md-6">
                                        <!--begin::Google link=-->
                                        <button type="button" class="btn btn-flex btn-outline btn-text-gray-700 btn-active-color-primary bg-state-light flex-center text-nowrap w-100">
                                        <img alt="Logo" src="/account/assets/media/svg/brand-logos/apple-black.svg" class="theme-light-show h-15px me-3" />
                                        <img alt="Logo" src="/account/assets/media/svg/brand-logos/apple-black-dark.svg" class="theme-dark-show h-15px me-3" />Sign in with Apple</button>
                                        <!--end::Google link=-->
                                    </div>
                                    <!--end::Col-->
                                </div>
                                <!--end::Login options-->
                                <!--begin::Separator-->
                                <div class="separator separator-content my-14">
                                    <span class="w-125px text-gray-500 fw-semibold fs-7">Or with email</span>
                                </div>
                                <!--end::Separator-->
                                <!--begin::Input group=-->
                                <div class="fv-row mb-8">
                                    <!--begin::Email-->
                                    <InputText @bind-Value="loginModel.Email" 
                                              type="email" 
                                              placeholder="Email" 
                                              name="email" 
                                              autocomplete="email" 
                                              class="form-control bg-transparent" />
                                    <ValidationMessage For="@(() => loginModel.Email)" class="text-danger" />
                                    <!--end::Email-->
                                </div>
                                <!--end::Input group=-->
                                <div class="fv-row mb-3">
                                    <!--begin::Password-->
                                    <InputText @bind-Value="loginModel.Password" 
                                              type="password" 
                                              placeholder="Password" 
                                              name="password" 
                                              autocomplete="current-password" 
                                              class="form-control bg-transparent" />
                                    <ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
                                    <!--end::Password-->
                                </div>
                                <!--end::Input group=-->
                                <!--begin::Wrapper-->
                                <div class="d-flex flex-stack flex-wrap gap-3 fs-base fw-semibold mb-8">
                                    <div></div>
                                    <!--begin::Link-->
                                    <a href="/forgot-password" class="link-primary">Forgot Password ?</a>
                                    <!--end::Link-->
                                </div>
                                <!--end::Wrapper-->
                                <!--begin::Submit button-->
                                <div class="d-grid mb-10">
                                    <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                        <!--begin::Indicator label-->
                                        @if (!isLoading)
                                        {
                                            <span class="indicator-label">Sign In</span>
                                        }
                                        else
                                        {
                                            <!--begin::Indicator progress-->
                                            <span class="indicator-progress">Please wait... 
                                            <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span>
                                            <!--end::Indicator progress-->
                                        }
                                    </button>
                                </div>
                                <!--end::Submit button-->
                                <!--begin::Sign up-->
                                <div class="text-gray-500 text-center fw-semibold fs-6">Not a Member yet? 
                                <a href="/signup" class="link-primary">Sign up</a></div>
                                <!--end::Sign up-->
                            </EditForm>
                            <!--end::Form-->
                        </div>
                        <!--end::Wrapper-->
                        <!--begin::Footer-->
                        <div class="d-flex flex-stack">
                            <!--begin::Languages-->
                            <div class="me-10">
                                <!--begin::Toggle-->
                                <button class="btn btn-flex btn-link btn-color-gray-700 btn-active-color-primary rotate fs-base" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-start" data-kt-menu-offset="0px, 0px">
                                    <img data-kt-element="current-lang-flag" class="w-20px h-20px rounded me-3" src="/account/assets/media/flags/united-states.svg" alt="" />
                                    <span data-kt-element="current-lang-name" class="me-1">English</span>
                                    <i class="ki-duotone ki-down fs-5 text-muted rotate-180 m-0"></i>
                                </button>
                                <!--end::Toggle-->
                                <!--begin::Menu-->
                                <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg-light-primary fw-semibold w-200px py-4 fs-7" data-kt-menu="true" id="kt_auth_lang_menu">
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link d-flex px-5" data-kt-lang="English">
                                            <span class="symbol symbol-20px me-4">
                                                <img data-kt-element="lang-flag" class="rounded-1" src="/account/assets/media/flags/united-states.svg" alt="" />
                                            </span>
                                            <span data-kt-element="lang-name">English</span>
                                        </a>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link d-flex px-5" data-kt-lang="Spanish">
                                            <span class="symbol symbol-20px me-4">
                                                <img data-kt-element="lang-flag" class="rounded-1" src="/assets/media/flags/spain.svg" alt="" />
                                            </span>
                                            <span data-kt-element="lang-name">Spanish</span>
                                        </a>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link d-flex px-5" data-kt-lang="German">
                                            <span class="symbol symbol-20px me-4">
                                                <img data-kt-element="lang-flag" class="rounded-1" src="/assets/media/flags/germany.svg" alt="" />
                                            </span>
                                            <span data-kt-element="lang-name">German</span>
                                        </a>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link d-flex px-5" data-kt-lang="Japanese">
                                            <span class="symbol symbol-20px me-4">
                                                <img data-kt-element="lang-flag" class="rounded-1" src="/assets/media/flags/japan.svg" alt="" />
                                            </span>
                                            <span data-kt-element="lang-name">Japanese</span>
                                        </a>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link d-flex px-5" data-kt-lang="French">
                                            <span class="symbol symbol-20px me-4">
                                                <img data-kt-element="lang-flag" class="rounded-1" src="/assets/media/flags/france.svg" alt="" />
                                            </span>
                                            <span data-kt-element="lang-name">French</span>
                                        </a>
                                    </div>
                                    <!--end::Menu item-->
                                </div>
                                <!--end::Menu-->
                            </div>
                            <!--end::Languages-->
                            <!--begin::Links-->
                            <div class="d-flex fw-semibold text-primary fs-base gap-5">
                                <a href="/terms" target="_blank">Terms</a>
                                <a href="/pricing" target="_blank">Plans</a>
                                <a href="/contact" target="_blank">Contact Us</a>
                            </div>
                            <!--end::Links-->
                        </div>
                        <!--end::Footer-->
                    </div>
                    <!--end::Content-->
                </div>
                <!--end::Wrapper-->
            </div>
            <!--end::Body-->
        </div>
        <!--end::Authentication - Sign-in-->
    </div>
    <!--end::Root-->
</body>

<script>
// Override the problematic JavaScript validation before it loads
window.addEventListener('DOMContentLoaded', function() {
    // Find and remove any existing event listeners on the submit button
    const submitBtn = document.querySelector('#kt_sign_in_submit');
    if (submitBtn) {
        // Clone the button to remove all event listeners
        const newSubmitBtn = submitBtn.cloneNode(true);
        submitBtn.parentNode.replaceChild(newSubmitBtn, submitBtn);
    }
    
    // Disable FormValidation if it exists
    if (typeof FormValidation !== 'undefined') {
        const form = document.querySelector('#kt_sign_in_form');
        if (form && form.fv) {
            form.fv.destroy();
        }
    }
});

// Prevent the KTSigninGeneral from initializing
if (typeof KTSigninGeneral !== 'undefined') {
    KTSigninGeneral.init = function() {
        console.log('KTSigninGeneral initialization prevented - using Blazor validation instead');
    };
}
</script>

@code {
    [SupplyParameterFromForm]
    private LoginModel? loginModel { get; set; }

    protected override void OnInitialized()
    {
        loginModel ??= new();
    }
    
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    public class LoginModel
    {
        [Required(ErrorMessage = "Email address is required")]
        [EmailAddress(ErrorMessage = "The value is not a valid email address")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "The password is required")]
        public string Password { get; set; } = string.Empty;
    }

    // Classes to match the actual API response structure
    public class ApiResponse
    {
        public int Status { get; set; }
        public string Type { get; set; } = string.Empty;
        public string Instance { get; set; } = string.Empty;
        public PayloadData Payload { get; set; } = new();
    }

    public class PayloadData
    {
        public bool RequiresTwoFactor { get; set; }
        public AuthResponseData AuthResponse { get; set; } = new();
    }

    public class AuthResponseData
    {
        public string AccessToken { get; set; } = string.Empty;
        public string RefreshToken { get; set; } = string.Empty;
    }

    private async Task SignIn()
    {
        try
        {
            Console.WriteLine("SignIn method called"); // Debug log
            Console.WriteLine($"Email: '{loginModel.Email}', Password: '{loginModel.Password}'"); // Debug log
            
            isLoading = true;
            errorMessage = string.Empty;
            StateHasChanged();

            var httpclient = HttpClientFactory.CreateClient("Auth");
            Console.WriteLine($"Making request to: {httpclient.BaseAddress}api/Account/Login"); // Debug log
            
            var response = await httpclient.PostAsJsonAsync("/api/Account/Login", new { 
                email = loginModel.Email, 
                password = loginModel.Password 
            });

            Console.WriteLine($"Response status: {response.StatusCode}"); // Debug log

            if (response.IsSuccessStatusCode)
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Response content: {responseContent}"); // Debug log
                
                var apiResponse = await response.Content.ReadFromJsonAsync<ApiResponse>();
                
                if (apiResponse != null && apiResponse.Status == 200 && 
                    !string.IsNullOrEmpty(apiResponse.Payload?.AuthResponse?.AccessToken))
                {
                    Console.WriteLine("Authentication successful!"); // Debug log
                    
                    // Store tokens in TokenProvider
                    TokenProvider.accesstoken = apiResponse.Payload.AuthResponse.AccessToken;
                    TokenProvider.refreshtoken = apiResponse.Payload.AuthResponse.RefreshToken;
                    
                    // Set authorization header for the profile request
                    httpclient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", apiResponse.Payload.AuthResponse.AccessToken);
                    
                    try
                    {
                        var userProfileResponse = await httpclient.GetAsync("/api/Profile"); 
                        
                        if (userProfileResponse.IsSuccessStatusCode)
                        {
                            var userprofile = await userProfileResponse.Content.ReadFromJsonAsync<UserProfile>();
                            
                            if (userprofile != null && !string.IsNullOrEmpty(userprofile.UserName))
                            {
                                var identity = new ClaimsIdentity(
                                    new[]
                                    {
                                        new Claim(ClaimTypes.Name, userprofile.UserName),
                                        new Claim(ClaimTypes.Email, loginModel.Email),
                                        // Add other claims as needed
                                    },
                                    "Custom Authentication");

                                var newUser = new ClaimsPrincipal(identity);
                                AuthService.CurrentUser = newUser;
                                
                                Console.WriteLine("Navigating to home page..."); // Debug log
                                // Navigate to dashboard or home page after successful login
                                Navigation.NavigateTo("/", true);
                                return; // Exit successfully
                            }
                        }
                        
                        // If profile request fails, still proceed with basic authentication
                        // Create user from login info
                        var basicIdentity = new ClaimsIdentity(
                            new[]
                            {
                                new Claim(ClaimTypes.Name, loginModel.Email),
                                new Claim(ClaimTypes.Email, loginModel.Email),
                            },
                            "Custom Authentication");

                        var basicUser = new ClaimsPrincipal(basicIdentity);
                        AuthService.CurrentUser = basicUser;
                        
                        Console.WriteLine("Navigating to home page (basic auth)..."); // Debug log
                        // Navigate to dashboard or home page after successful login
                        Navigation.NavigateTo("/", true);
                    }
                    catch (Exception profileEx)
                    {
                        Console.WriteLine($"Profile request failed: {profileEx.Message}");
                        
                        // Still proceed with basic authentication
                        var basicIdentity = new ClaimsIdentity(
                            new[]
                            {
                                new Claim(ClaimTypes.Name, loginModel.Email),
                                new Claim(ClaimTypes.Email, loginModel.Email),
                            },
                            "Custom Authentication");

                        var basicUser = new ClaimsPrincipal(basicIdentity);
                        AuthService.CurrentUser = basicUser;
                        
                        Navigation.NavigateTo("/", true);
                    }
                }
                else
                {
                    Console.WriteLine("Invalid API response structure"); // Debug log
                    errorMessage = "Invalid response from authentication server.";
                }
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Login failed with status: {response.StatusCode}, Content: {errorContent}");
                
                if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
                {
                    errorMessage = "Invalid email or password.";
                }
                else
                {
                    errorMessage = $"Login failed. Please try again.";
                }
            }
        }
        catch (HttpRequestException httpEx)
        {
            Console.WriteLine($"HTTP Request Exception: {httpEx.Message}");
            errorMessage = "Unable to connect to the authentication server. Please check your internet connection.";
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Login error: {ex.Message}");
            errorMessage = "An unexpected error occurred. Please try again.";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}
@* *@
@* <body id="kt_body" class="app-blank bgi-size-cover bgi-attachment-fixed bgi-position-center"> *@
@* 		<!--begin::Theme mode setup on page load--> *@
@* 		<script>var defaultThemeMode = "light"; var themeMode; if ( document.documentElement ) { if ( document.documentElement.hasAttribute("data-bs-theme-mode")) { themeMode = document.documentElement.getAttribute("data-bs-theme-mode"); } else { if ( localStorage.getItem("data-bs-theme") !== null ) { themeMode = localStorage.getItem("data-bs-theme"); } else { themeMode = defaultThemeMode; } } if (themeMode === "system") { themeMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"; } document.documentElement.setAttribute("data-bs-theme", themeMode); }</script> *@
@* 		<!--end::Theme mode setup on page load--> *@
@* 		<!--begin::Root--> *@
@* 		<div class="d-flex flex-column flex-root" id="kt_app_root"> *@
@* 			<!--begin::Page bg image--> *@
@* 			<style> [data-bs-theme="dark"] </style> *@
@* 			<!--end::Page bg image--> *@
@* 			<!--begin::Authentication - Sign-in --> *@
@* 			<div class="d-flex flex-column flex-lg-row flex-column-fluid"> *@
@* 				<!--begin::Aside--> *@
@* 				<div class="d-flex flex-lg-row-fluid"> *@
@* 					<!--begin::Content--> *@
@* 					<div class="d-flex flex-column align-items-center justify-content-between pb-0 pb-lg-10 p-10 w-100"> *@
@* 						<!--begin::Image--> *@
@* 						<div class="w-100 h-125px d-flex flex-center" style="background-color: #151B54"> *@
@* 							<img class="theme-light-show" src="@Assets["/assets/pages/img/login/logo.png"]" style="width: 80%" alt="" /> *@
@* *@
@* 						</div> *@
@* *@
@* 						<img class="theme-light-show mx-auto mw-100 mb-10 mb-lg-20" src="@Assets["/assets/pages/img/login/bg0.jpg"]" width="100% !important" alt="" /> *@
@* 					 *@
@* 						<!--end::Image--> *@
@* 						<!--begin::Title--> *@
@* 						<h1 class="text-gray-800 fs-2qx fw-bold text-center mb-7">Fast, Efficient and Productive</h1> *@
@* 						<!--end::Title--> *@
@* 						 *@
@* 						<br/> *@
@* 						<p>Copyright &copy; F&F ICT SOLUTIONS LTD 2017</p> *@
@* 						<!--end::Text--> *@
@* 					</div> *@
@* 					<!--end::Content--> *@
@* 				</div> *@
@* 				<!--begin::Aside--> *@
@* 				<!--begin::Body--> *@
@* 				<div class="d-flex flex-column-fluid flex-lg-row-auto justify-content-center justify-content-lg-end p-12"> *@
@* 					<!--begin::Wrapper--> *@
@* 					<div class="bg-body d-flex flex-column flex-center rounded-4 w-md-600px p-10"> *@
@* 						<!--begin::Content--> *@
@* 						<div class="d-flex flex-center flex-column align-items-stretch h-lg-100 w-md-400px"> *@
@* 							<!--begin::Wrapper--> *@
@* 							<div class="d-flex flex-center flex-column flex-column-fluid pb-15 pb-lg-20"> *@
@* 								<!--begin::Form--> *@
@* 								<form class="form w-100" novalidate="novalidate" id="kt_sign_in_form" data-kt-redirect-url="index.html" action="#"> *@
@* 									<!--begin::Heading--> *@
@* 									<div class="text-center mb-11"> *@
@* 										<!--begin::Title--> *@
@* 										<h1 class="text-gray-900 fw-bolder mb-3">Sign In</h1> *@
@* 										<!--end::Title--> *@
@* 										<!--begin::Subtitle--> *@
@* 										<div class="text-gray-500 fw-semibold fs-6">Your Social Campaigns</div> *@
@* 										<!--end::Subtitle=--> *@
@* 									</div> *@
@* 									<!--begin::Heading--> *@
@* 									<!--begin::Login options--> *@
@* 									<div class="row g-3 mb-9"> *@
@* 										<!--begin::Col--> *@
@* 										<div class="col-md-6"> *@
@* 											<!--begin::Google link=--> *@
@* 											<a href="#" class="btn btn-flex btn-outline btn-text-gray-700 btn-active-color-primary bg-state-light flex-center text-nowrap w-100"> *@
@* 											<img alt="Logo" src="@Assets["account/assets/media/svg/brand-logos/google-icon.svg"]" class="h-15px me-3" />Sign in with Google</a> *@
@* 											<!--end::Google link=--> *@
@* 										</div> *@
@* 										<!--end::Col--> *@
@* 										<!--begin::Col--> *@
@* 										<div class="col-md-6"> *@
@* 											<!--begin::Google link=--> *@
@* 											<a href="#" class="btn btn-flex btn-outline btn-text-gray-700 btn-active-color-primary bg-state-light flex-center text-nowrap w-100"> *@
@* 											<img alt="Logo" src="@Assets["account/assets/media/svg/brand-logos/apple-black.svg"]" class="theme-light-show h-15px me-3" /> *@
@* 											<img alt="Logo" src="@Assets["account/assets/media/svg/brand-logos/apple-black-dark.svg"]" class="theme-dark-show h-15px me-3" />Sign in with Apple</a> *@
@* 											<!--end::Google link=--> *@
@* 										</div> *@
@* 										<!--end::Col--> *@
@* 									</div> *@
@* 									<!--end::Login options--> *@
@* 									<!--begin::Separator--> *@
@* 									<div class="separator separator-content my-14"> *@
@* 										<span class="w-125px text-gray-500 fw-semibold fs-7">Or with email</span> *@
@* 									</div> *@
@* 									<!--end::Separator--> *@
@* 									<!--begin::Input group=--> *@
@* 									<div class="fv-row mb-8"> *@
@* 										<!--begin::Email--> *@
@* 										<input type="text" placeholder="Email" name="email" autocomplete="off" class="form-control bg-transparent" /> *@
@* 										<!--end::Email--> *@
@* 									</div> *@
@* 									<!--end::Input group=--> *@
@* 									<div class="fv-row mb-3"> *@
@* 										<!--begin::Password--> *@
@* 										<input type="password" placeholder="Password" name="password" autocomplete="off" class="form-control bg-transparent" /> *@
@* 										<!--end::Password--> *@
@* 									</div> *@
@* 									<!--end::Input group=--> *@
@* 									<!--begin::Wrapper--> *@
@* 									<div class="d-flex flex-stack flex-wrap gap-3 fs-base fw-semibold mb-8"> *@
@* 										<div></div> *@
@* 										<!--begin::Link--> *@
@* 										<a href="authentication/layouts/overlay/reset-password.html" class="link-primary">Forgot Password ?</a> *@
@* 										<!--end::Link--> *@
@* 									</div> *@
@* 									<!--end::Wrapper--> *@
@* 									<!--begin::Submit button--> *@
@* 									<div class="d-grid mb-10"> *@
@* 										<button type="submit" id="kt_sign_in_submit" class="btn btn-primary"> *@
@* 											<!--begin::Indicator label--> *@
@* 											<span class="indicator-label">Sign In</span> *@
@* 											<!--end::Indicator label--> *@
@* 											<!--begin::Indicator progress--> *@
@* 											<span class="indicator-progress">Please wait...  *@
@* 											<span class="spinner-border spinner-border-sm align-middle ms-2"></span></span> *@
@* 											<!--end::Indicator progress--> *@
@* 										</button> *@
@* 									</div> *@
@* 									<!--end::Submit button--> *@
@* 									<!--begin::Sign up--> *@
@* 									<div class="text-gray-500 text-center fw-semibold fs-6">Not a Member yet?  *@
@* 									<a href="authentication/layouts/overlay/sign-up.html" class="link-primary">Sign up</a></div> *@
@* 									<!--end::Sign up--> *@
@* 								</form> *@
@* 								<!--end::Form--> *@
@* 							</div> *@
@* 							<!--end::Wrapper--> *@
@* 							<!--begin::Footer--> *@
@* 							<div class="d-flex flex-stack"> *@
@* 								<!--begin::Languages--> *@
@* 								<div class="me-10"> *@
@* 									<!--begin::Toggle--> *@
@* 									<button class="btn btn-flex btn-link btn-color-gray-700 btn-active-color-primary rotate fs-base" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-start" data-kt-menu-offset="0px, 0px"> *@
@* 										<img data-kt-element="current-lang-flag" class="w-20px h-20px rounded me-3" src="@Assets["account/assets/media/flags/united-states.svg"]" alt="" /> *@
@* 										<span data-kt-element="current-lang-name" class="me-1">English</span> *@
@* 										<i class="ki-duotone ki-down fs-5 text-muted rotate-180 m-0"></i> *@
@* 									</button> *@
@* 									<!--end::Toggle--> *@
@* 									<!--begin::Menu--> *@
@* 									<div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg-light-primary fw-semibold w-200px py-4 fs-7" data-kt-menu="true" id="kt_auth_lang_menu"> *@
@* 										<!--begin::Menu item--> *@
@* 										<div class="menu-item px-3"> *@
@* 											<a href="#" class="menu-link d-flex px-5" data-kt-lang="English"> *@
@* 												<span class="symbol symbol-20px me-4"> *@
@* 													<img data-kt-element="lang-flag" class="rounded-1" src="@Assets["account/assets/media/flags/united-states.svg"]" alt="" /> *@
@* 												</span> *@
@* 												<span data-kt-element="lang-name">English</span> *@
@* 											</a> *@
@* 										</div> *@
@* 										<!--end::Menu item--> *@
@* 										<!--begin::Menu item--> *@
@* 										<div class="menu-item px-3"> *@
@* 											<a href="#" class="menu-link d-flex px-5" data-kt-lang="Spanish"> *@
@* 												<span class="symbol symbol-20px me-4"> *@
@* 													<img data-kt-element="lang-flag" class="rounded-1" src="assets/media/flags/spain.svg" alt="" /> *@
@* 												</span> *@
@* 												<span data-kt-element="lang-name">Spanish</span> *@
@* 											</a> *@
@* 										</div> *@
@* 										<!--end::Menu item--> *@
@* 										<!--begin::Menu item--> *@
@* 										<div class="menu-item px-3"> *@
@* 											<a href="#" class="menu-link d-flex px-5" data-kt-lang="German"> *@
@* 												<span class="symbol symbol-20px me-4"> *@
@* 													<img data-kt-element="lang-flag" class="rounded-1" src="assets/media/flags/germany.svg" alt="" /> *@
@* 												</span> *@
@* 												<span data-kt-element="lang-name">German</span> *@
@* 											</a> *@
@* 										</div> *@
@* 										<!--end::Menu item--> *@
@* 										<!--begin::Menu item--> *@
@* 										<div class="menu-item px-3"> *@
@* 											<a href="#" class="menu-link d-flex px-5" data-kt-lang="Japanese"> *@
@* 												<span class="symbol symbol-20px me-4"> *@
@* 													<img data-kt-element="lang-flag" class="rounded-1" src="assets/media/flags/japan.svg" alt="" /> *@
@* 												</span> *@
@* 												<span data-kt-element="lang-name">Japanese</span> *@
@* 											</a> *@
@* 										</div> *@
@* 										<!--end::Menu item--> *@
@* 										<!--begin::Menu item--> *@
@* 										<div class="menu-item px-3"> *@
@* 											<a href="#" class="menu-link d-flex px-5" data-kt-lang="French"> *@
@* 												<span class="symbol symbol-20px me-4"> *@
@* 													<img data-kt-element="lang-flag" class="rounded-1" src="assets/media/flags/france.svg" alt="" /> *@
@* 												</span> *@
@* 												<span data-kt-element="lang-name">French</span> *@
@* 											</a> *@
@* 										</div> *@
@* 										<!--end::Menu item--> *@
@* 									</div> *@
@* 									<!--end::Menu--> *@
@* 								</div> *@
@* 								<!--end::Languages--> *@
@* 								<!--begin::Links--> *@
@* 								<div class="d-flex fw-semibold text-primary fs-base gap-5"> *@
@* 									<a href="pages/team.html" target="_blank">Terms</a> *@
@* 									<a href="pages/pricing/column.html" target="_blank">Plans</a> *@
@* 									<a href="pages/contact.html" target="_blank">Contact Us</a> *@
@* 								</div> *@
@* 								<!--end::Links--> *@
@* 							</div> *@
@* 							<!--end::Footer--> *@
@* 						</div> *@
@* 						<!--end::Content--> *@
@* 					</div> *@
@* 					<!--end::Wrapper--> *@
@* 				</div> *@
@* 				<!--end::Body--> *@
@* 			</div> *@
@* 			<!--end::Authentication - Sign-in--> *@
@* 		</div> *@
@* 		<!--end::Root--> *@
@* 	</body> *@

